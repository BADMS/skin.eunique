<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_514_DiscArt">
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(514)</visible>
			<visible>Container.Content(movies)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="panel" id="514">
				<top>TopPad</top>
				<right>60</right>
				<left>60</left>
				<width>1920</width>
				<height>720</height>
				<onleft condition="Control.IsVisible(60)">60</onleft>
				<onleft condition="!Control.IsVisible(60) + !Skin.HasSetting(global.kioskmode)">9000</onleft>
				<onright condition="Control.IsVisible(60)">60</onright>
				<onright condition="!Control.IsVisible(60) + !Skin.HasSetting(global.kioskmode)">9000</onright>
				<preloaditems>2</preloaditems>
				<pagecontrol>60</pagecontrol>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<focusposition>1</focusposition>
				<viewtype label="31834">list</viewtype>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout width="360" height="360">
					<control type="image">
						<description>Landscape</description>
						<posx>5</posx>
						<posy>5</posy>
						<width>350</width>
						<height>350</height>
						<texture background="true" fallback="cdart/default.png">$VAR[CDArt]</texture>
						<aspectratio scalediffuse="false">keep</aspectratio>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>
				</itemlayout>
				<focusedlayout width="360" height="360">
					<control type="group">
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
							<onfocus>RunScript(script.toolbox,info=blur,id='"$INFO[ListItem.Art(fanart)]"',radius=$VAR[VideoInfoBlurLevel],prefix=DiscInfo)</onfocus>
						</control>
						<control type="image">
							<posx>5</posx>
							<posy>5</posy>
							<width>350</width>
							<height>350</height>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture colordiffuse="$INFO[Window(home).Property(DiscInfo.ImageColor)]" background="true" fallback="cdart/default.png">$VAR[CDArt]</texture>
							<animation effect="rotate" end="-360" center="auto" time="200" loop="false" reversible="false">Focus</animation>
						</control>
						<control type="label">
							<centerright>32</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<centerright>32</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<centerright>32</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<centerright>32</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<centerright>32</centerright>
							<centertop>35</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
						<control type="textbox">
							<left>30</left>
							<right>30</right>
							<top>158</top>
							<align>center</align>
							<height>34</height>
							<autoscroll>false</autoscroll>
							<font>SmallBold</font>
							<textcolor>white2</textcolor>
							<selectedcolor>white</selectedcolor>
							<label>$INFO[ListItem.Rating]$VAR[LabelYear,  ]$VAR[LabelDuration,  ]$VAR[MPAA,  ]$VAR[HDSD,  ]</label>
						</control>
					</control>
				</focusedlayout>
			</control>
			<include>Furniture_ScrollbarT</include>
		</control>
	</include>
</includes>