<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation commit check -->
<includes>
	<include name="View_155_Wall_Emby">
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(155)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
						<animation effect="slide" end="-20,0" center="auto" time="200" condition="Container.Column(7)">Conditional</animation>
						<animation effect="slide" end="23,0" center="auto" time="200" condition="Container.Column(0)">Conditional</animation>
						<animation effect="slide" end="0,-10" center="auto" time="200" condition="Container.Row(1)">Conditional</animation>
						<animation effect="slide" end="0,10" center="auto" time="200" condition="Container.Row(0)">Conditional</animation>
			<control type="panel" id="155">
				<visible>Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets) | Container.Content(episodes)</visible>
				<top>TopPad</top>
				<right>0</right>
				<width>1920</width>
				<height>720</height>
				<onleft condition="Control.IsVisible(60)">60</onleft>
				<onleft condition="!Control.IsVisible(60) + !Skin.HasSetting(global.kioskmode)">9000</onleft>
				<onright condition="Control.IsVisible(60)">60</onright>
				<onright condition="!Control.IsVisible(60) + !Skin.HasSetting(global.kioskmode)">9000</onright>
				<onup>155</onup>
				<ondown>155</ondown>
				<preloaditems>2</preloaditems>
				<pagecontrol>60</pagecontrol>
				<viewtype label="31779">panel</viewtype>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout width="240" height="360">
					<control type="image">
						<left>10</left>
						<top>10</top>
						<right>10</right>
						<bottom>10</bottom>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture background="true">$VAR[PosterImage]</texture>
						<animation type="Conditional" reversible="true" condition="stringcompare(ListItem.Overlay,OverlayWatched.png)">
							<effect type="fade" start="25" end="25" time="200" tween="quadratic" easing="out" />
							<effect type="zoom" end="95" time="200" center="auto" tween="quadratic" easing="out" />
							<effect type="rotate" end="-1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
					</control>
					<control type="image">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture>$VAR[PercentWatched]</texture>
						<visible>!stringcompare(ListItem.Label,..)</visible>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>
				</itemlayout>
				<focusedlayout width="240" height="360">
					<control type="button">
							<onfocus>AlarmClock(castScroll,Control.Move(508923,1),00:02,silent,loop)</onfocus>
					</control>
					<control type="image">
						<left>0</left>
						<top>4</top>
						<right>0</right>
						<bottom>4</bottom>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture colordiffuse="$VAR[EmbyLeftColourHighlight]" background="true">common/white.png</texture>
						<animation effect="zoom" end="108" time="0" center="auto">Focus</animation>
					</control>
					<control type="image">
						<left>10</left>
						<top>10</top>
						<right>10</right>
						<bottom>10</bottom>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture background="true">$VAR[PosterImage]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" end="105" time="200" center="auto" tween="quadratic" easing="out" />
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
					</control>
					<control type="image">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture>$VAR[PercentWatched]</texture>
						<visible>!stringcompare(ListItem.Label,..)</visible>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>22</centerright>
						<centertop>26</centertop>
						<width>32</width>
						<height>32</height>
						<font>tinysymbol</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!Skin.HasSetting(views.155.showtick)</visible>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>
				</focusedlayout>
			</control>
			<include>Furniture_ScrollbarW</include>
			<!--<control type="group" description="Poster"><visible>!IsEmpty(ListItem.Icon)</visible><left>70</left><width>448</width><top>206</top><height>660</height><control type="image"><width>100%</width><height>100%</height><texture border="10">common/nofocus-shadow10.png</texture></control><control type="image"><left>10</left><top>10</top><right>10</right><bottom>10</bottom><texture border="10" colordiffuse="$VAR[EmbyLeftColourHighlight]">common/box.png</texture></control><control type="image"><left>10</left><top>10</top><right>10</right><bottom>10</bottom><fadetime>300</fadetime><aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio><texture background="true">$VAR[PosterImage]</texture></control></control>--></control>
	</include>
	<include name="View_55_Wall_Fanout"/>
</includes>
