<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_500_Thumbnails">
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(500)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<animation effect="slide" end="-20,0" center="auto" time="200" condition="Container.Column(5)">Conditional</animation>
			<animation effect="slide" end="20,0" center="auto" time="200" condition="Container.Column(0)">Conditional</animation>
			<animation effect="slide" end="0,-10" center="auto" time="200" condition="Container.Row(2)">Conditional</animation>
			<animation effect="slide" end="0,10" center="auto" time="200" condition="Container.Row(0)">Conditional</animation>
			<control type="group">
				<control type="panel" id="500">
				<top>TopPad</top>
				<right>0</right>
				<width>1920</width>
				<height>1070</height>
					<onright>60</onright>
					<onleft>60</onleft>
					<onup>500</onup>
					<ondown>500</ondown>
					<preloaditems>2</preloaditems>
					<pagecontrol>60</pagecontrol>
					<orientation>vertical</orientation>
					<viewtype label="21371">list</viewtype>
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout height="310" width="320">
						<control type="image">
							<left>10</left>
							<top>10</top>
							<right>10</right>
							<bottom>10</bottom>
							<texture border="5" colordiffuse="Panel">common/box.png</texture>
						</control>
						<control type="label">
							<bottom>2</bottom>
							<height>50</height>
							<aligny>center</aligny>
							<align>center</align>
							<font>Tiny</font>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>PanelWhite70</textcolor>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>256</height>
							<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
							<texture background="true">$VAR[LandscapeImage]</texture>
							<visible>!Container.Content(albums) + !Container.Content(artists) + !Container.Content(songs) + !Skin.HasSetting(views.500.showfanart)</visible>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>256</height>
							<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
							<texture background="true">$VAR[FanartImage]</texture>
							<visible>!Container.Content(albums) + !Container.Content(artists) + !Container.Content(songs) + Skin.HasSetting(views.500.showfanart)</visible>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>256</height>
							<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
							<texture background="true">$VAR[ThumbImage]</texture>
							<visible>Container.Content(albums) | Container.Content(artists) | Container.Content(songs)</visible>
						</control>
						<control type="image">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<aspectratio aligny="top">keep</aspectratio>
							<texture>$VAR[PercentWatched]</texture>
							<visible>!stringcompare(ListItem.Label,..)</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
					</itemlayout>
					<focusedlayout height="310" width="320">
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
						</control>
					<control type="image">
						<left>0</left>
						<top>4</top>
						<right>0</right>
						<bottom>4</bottom>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture colordiffuse="$VAR[EmbyLeftColourHighlight]" background="true">common/white.png</texture>
						<animation effect="zoom" end="105" time="0" center="auto">Focus</animation>
					</control>
						<control type="label">
							<bottom>2</bottom>
							<height>50</height>
							<aligny>center</aligny>
							<align>center</align>
							<font>Tiny</font>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>$VAR[ColourSelected]</textcolor>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>226</height>
							<aspectratio scalediffuse="false">scale</aspectratio>
							<texture colordiffuse="$VAR[EmbyLeftColourHighlight]">common/white.png</texture>
						<animation effect="zoom" end="105" time="0" center="auto">Focus</animation>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>256</height>
							<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
							<texture background="true">$VAR[LandscapeImage]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" end="105" time="200" center="auto" tween="quadratic" easing="out" />
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
							<visible>!Container.Content(albums) + !Container.Content(artists) + !Container.Content(songs) + !Skin.HasSetting(views.500.showfanart)</visible>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>256</height>
							<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
							<texture background="true">$VAR[FanartImage]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" end="105" time="200" center="auto" tween="quadratic" easing="out" />
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
							<visible>!Container.Content(albums) + !Container.Content(artists) + !Container.Content(songs) + Skin.HasSetting(views.500.showfanart)</visible>
						</control>
						<control type="image">
							<left>12</left>
							<top>12</top>
							<right>12</right>
							<height>256</height>
							<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
							<texture background="true">$VAR[ThumbImage]</texture>
							<visible>Container.Content(albums) | Container.Content(artists) | Container.Content(songs)</visible>
						<animation type="Focus" reversible="false">
							<effect type="zoom" end="105" time="200" center="auto" tween="quadratic" easing="out" />
							<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
						</animation>
						</control>
						<control type="image">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<aspectratio aligny="top">keep</aspectratio>
							<texture>$VAR[PercentWatched]</texture>
							<visible>!stringcompare(ListItem.Label,..)</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<centerright>42</centerright>
							<centertop>42</centertop>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
					</focusedlayout>
				</control>
			</control>
			<include>Furniture_ScrollbarW</include>
		</control>
	</include>
</includes>