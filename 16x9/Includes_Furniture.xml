<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="Furniture_Scrollbar">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerright>18</centerright>
			<posy>TopPad</posy>
			<height>720</height>
			<width>10</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ScrollbarS">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerright>18</centerright>
			<posy>TopPad</posy>
			<height>896</height>
			<width>10</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ScrollbarL">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<centerleft>18</centerleft>
			<posy>TopPad</posy>
			<height>720</height>
			<width>10</width>
			<onright>50</onright>
			<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="-100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ScrollbarW">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>-10</posx>
			<posy>TopPad</posy>
			<height>720</height>
			<width>10</width>
			<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
			<onright>50</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="-100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>Container.Column(0)</visible>
		</control>
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>1920</posx>
			<posy>TopPad</posy>
			<height>720</height>
			<width>10</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>!Container.Column(0)</visible>
		</control>
	</include>
	<include name="Furniture_ScrollbarT">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>-10</posx>
			<posy>TopPad</posy>
			<height>920</height>
			<width>10</width>
			<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
			<onright>50</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="-100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>Container.Column(0)</visible>
		</control>
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>1920</posx>
			<posy>TopPad</posy>
			<height>920</height>
			<width>10</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>!Container.Column(0)</visible>
		</control>
	</include>
	<include name="Furniture_ScrollbarBigList">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>-10</posx>
			<posy>TopPad</posy>
			<height>919</height>
			<width>10</width>
			<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
			<onright>50</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="-100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>Container.Column(0)</visible>
		</control>
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>1920</posx>
			<posy>TopPad</posy>
			<height>919</height>
			<width>10</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>!Container.Column(0)</visible>
		</control>
	</include>
	<include name="Furniture_ScrollbarM">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>-250</posx>
			<posy>TopPad</posy>
			<height>720</height>
			<width>10</width>
			<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
			<onright>50</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="-100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>Container.Column(0)</visible>
		</control>
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<posx>3360</posx>
			<posy>TopPad</posy>
			<height>720</height>
			<width>10</width>
			<onleft>50</onleft>
			<onright condition="!Skin.HasSetting(global.kioskmode)">9000</onright>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<animation effect="slide" end="100,0" time="200" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
			<visible>!Container.Column(0)</visible>
		</control>
	</include>
	<include name="Furniture_Scrollbar_Horizontal">
		<control type="scrollbar" id="60">
			<onback>50</onback>
			<left>SidePad</left>
			<width>1760</width>
			<bottom>200</bottom>
			<orientation>horizontal</orientation>
			<height>8</height>
			<onup>50</onup>
			<ondown condition="!Skin.HasSetting(global.kioskmode)">9000</ondown>
			<texturesliderbackground border="4" colordiffuse="Dark4">scrollbar/scrollv.png</texturesliderbackground>
			<texturesliderbar border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbar>
			<texturesliderbarfocus border="4" colordiffuse="$VAR[ColourHighlight]">scrollbar/scrollv.png</texturesliderbarfocus>
			<animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
		</control>
	</include>
	<include name="Furniture_ButtonBack">
		<width>64</width>
		<height>64</height>
		<animation type="Focus" reversible="false">
			<effect type="zoom" start="75" end="100" center="auto" time="200" />
		</animation>
	</include>
	<include name="Furniture_ButtonBack_Circle">
		<width>64</width>
		<height>64</height>
		<texture colordiffuse="Dark1">common/circle.png</texture>
	</include>
	<!-- Flags -->
	<variable name="Flagstar1">
		<value condition="IntegerGreaterThan(ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar2">
		<value condition="IntegerGreaterThan(ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar3">
		<value condition="IntegerGreaterThan(ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar4">
		<value condition="IntegerGreaterThan(ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="Flagstar5">
		<value condition="IntegerGreaterThan(ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar1">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar2">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar3">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar4">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HubFlagstar5">
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(Container(9500).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<!-- MusicFlags -->
	<variable name="MusicFlagstar5">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar4">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar3">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar2">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="MusicFlagstar1">
		<value condition="StringCompare(ListItem.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating2.png)">star10</value>
		<value condition="StringCompare(ListItem.StarRating,rating1.png)">star10</value>
		<value>star0</value>
	</variable>
	<!-- MusicOSDFlags -->
	<variable name="OSDMusicFlagstar5">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar4">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar3">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar2">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">star10</value>
		<value>star0</value>
	</variable>
	<variable name="OSDMusicFlagstar1">
		<value condition="StringCompare(Player.StarRating,rating5.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating4.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating3.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating2.png)">star10</value>
		<value condition="StringCompare(Player.StarRating,rating1.png)">star10</value>
		<value>star0</value>
	</variable>
	<include name="Furniture_Logo">
		<control type="group">
			<visible>Skin.HasSetting(furniture.logo)</visible>
			<visible>!Control.HasFocus(515)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Control.IsVisible(500) + !Control.IsVisible(54) + !Control.IsVisible(52) + !ControlGroup(9000).HasFocus()</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<left>1664</left>
			<top>909</top>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<animation effect="fade" end="0" start="100" time="0" center="auto" condition="Control.IsVisible(50) + !Window.IsVisible(DialogContextMenu.xml)">Conditional</animation>
			<animation type="Conditional" reversible="true" condition="ControlGroup(9000).HasFocus() | Window.IsVisible(DialogContextMenu.xml)">
				<effect type="slide" start="0" end="-65" time="200" center="auto" tween="quadratic" easing="out" />
				<effect type="zoom" end="135" start="100" time="200" center="auto" tween="quadratic" easing="in" />
			</animation>
			<control type="image">
				<width>228</width>
				<height>100</height>
				<texture>$VAR[ClearLogo]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<fadetime>50</fadetime>
				<animation effect="rotate" end="0" center="auto" condition="true" time="200">conditional</animation>
			</control>
		</control>
	</include>
	<variable name="HeaderIcon">
		<value condition="Window.IsVisible(DialogMuteBug.xml)"></value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)"></value>
		<value condition="Window.IsVisible(DialogFavourites.xml)"></value>
		<value condition="Window.IsVisible(1101)"></value>
		<value condition="Window.IsVisible(1102)"></value>
		<value condition="Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105)"></value>
		<value condition="Player.HasAudio + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(movies) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]"></value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes) + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]"></value>
		<value condition="Player.HasVideo + [Window.IsVisible(fullscreenvideo) | Window.IsVisible(visualisation) | Window.IsVisible(home)]"></value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)"></value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogAlbumInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)"></value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)"></value>
		<value condition="SubString(Container.FolderPath,sources://,Left)"></value>
		<value condition="SubString(Container.FolderPath,special://videoplaylists/,Left)"></value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/)"></value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/video/)"></value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/music/)"></value>
		<value condition="StringCompare(Container.FolderPath,special://profile/playlists/mixed/)"></value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)"></value>
		<value condition="SubString(Container.FolderPath,library://video/movies/,Left)"></value>
		<value condition="SubString(Container.FolderPath,library://video/tvshows/,Left)"></value>
		<value condition="SubString(Container.FolderPath,videodb://movies/,Left)"></value>
		<value condition="SubString(Container.FolderPath,videodb://tvshows/,Left)"></value>
		<value condition="SubString(Container.FolderPath,plugin://,Left)"></value>
		<value condition="Container.Content(movies)"></value>
		<value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)"></value>
		<value condition="Container.Content(songs)"></value>
		<value condition="Container.Content(livetv)"></value>
		<value condition="Container.Content(files)"></value>
		<value condition="Container.Content(plugins)"></value>
		<value condition="Container.Content(addons)"></value>
		<value condition="SubString(Container.FolderPath,videodb://musicvideos/,Left)"></value>
		<value condition="Window.IsVisible(ColorPicker.xml)"></value>
		<value condition="Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)"></value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)"></value>
		<value condition="Window.IsVisible(MyPics.xml)"></value>
		<value condition="Window.IsVisible(MyPrograms.xml) | Window.IsVisible(AddonBrowser.xml)"></value>
		<value condition="Window.IsVisible(weather)"></value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)"></value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)"></value>
		<value condition="Window.IsVisible(FileManager.xml)"></value>
		<value condition="Window.IsVisible(Home.xml)"></value>
		<value condition="Window.IsVisible(MyVideoNav.xml)"></value>
		<value></value>
	</variable>
	<variable name="MainHeaderLabel">
		<value condition="Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)">$LOCALIZE[20186]...</value>
		<value condition="Window.IsVisible(ColorPicker.xml)">Pick a Colour</value>
		<value condition="Window.IsVisible(MyMusicPlaylistEditor.xml)">$LOCALIZE[20011]</value>
		<value condition="Window.IsVisible(DialogButtonMenu.xml)">$LOCALIZE[33060]</value>
		<value condition="Window.IsVisible(DialogFavourites.xml)">$LOCALIZE[1036]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">$LOCALIZE[31141]</value>
		<value condition="Window.IsVisible(DialogAlbumInfo.xml) + Container.Content(albums)">$INFO[ListItem.Album]$INFO[ListItem.Year, (,)]</value>
		<value condition="Window.IsVisible(DialogAlbumInfo.xml) + !Container.Content(albums)">$INFO[ListItem.Artist]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + !Container.Content(episodes)">$INFO[ListItem.Title]$INFO[ListItem.Year, (,)]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(episodes)">$INFO[ListItem.Title]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(musicvideos) + !IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(episodes) + !IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">$LOCALIZE[31241]</value>		<value condition="Window.IsVisible(MyVideoNav.xml) + StringCompare(Container.FolderPath,videodb://movies/titles/)">$LOCALIZE[20342]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + StringCompare(Container.FolderPath,videodb://tvshows/titles/)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + SubString(Container.FolderPath,videodb://movies/,Left)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + SubString(Container.FolderPath,videodb://tvshows/,Left) + Container.Content(episodes) + !IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]$INFO[ListItem.Season, - Season ,]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + SubString(Container.FolderPath,videodb://tvshows/,Left)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml) + !IsEmpty(Container.FolderName)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyVideoNav.xml)">$LOCALIZE[3]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$LOCALIZE[19019]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[4]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
		<value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
		<value condition="!IsEmpty(Container.FolderName) + [Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)]">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(MyMusicSongs.xml)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(SettingsSystemInfo.xml) | Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
		<value condition="!IsEmpty(Container.FolderName) + Window.IsVisible(MyPics.xml)">$INFO[Container.FolderName]</value>
		<value condition="Window.IsVisible(MyPics.xml)">$LOCALIZE[1]</value>
		<value condition="Window.IsVisible(MyPrograms.xml)">$LOCALIZE[0]</value>
		<value condition="Window.IsVisible(AddonBrowser.xml)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(MyMusicPlaylist.xml)">$LOCALIZE[559]</value>
		<value condition="Window.IsVisible(FileManager.xml)">$LOCALIZE[744]</value>
		<value condition="Window.IsVisible(1101)">$LOCALIZE[31192]</value>
		<value condition="Window.IsVisible(1102)">$LOCALIZE[31193]</value>
		<value condition="Window.IsVisible(1103) + StringCompare(Window(1103).Property(content),1)">$INFO[Window(home).Property(ExtStudio),$LOCALIZE[31205] ,]</value>
		<value condition="Window.IsVisible(1103) + StringCompare(Window(1103).Property(content),2)">$INFO[Window(home).Property(ExtMovie),$LOCALIZE[31204] ,]</value>
		<value condition="Window.IsVisible(1103)">$INFO[Window(home).Property(ExtDirector),$LOCALIZE[31191] ,]</value>
		<value condition="Window.IsVisible(1104) + StringCompare(Window(1104).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(1104) + StringCompare(Window(1104).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(1104) + StringCompare(Window(1104).Property(content),3)">$LOCALIZE[31209]</value>
		<value condition="Window.IsVisible(1104)">$LOCALIZE[31208]</value>
		<value condition="Window.IsVisible(1105) + StringCompare(Window(1105).Property(content),1)">$LOCALIZE[31211]</value>
		<value condition="Window.IsVisible(1105) + StringCompare(Window(1105).Property(content),2)">$LOCALIZE[31210]</value>
		<value condition="Window.IsVisible(1105) + StringCompare(Window(1105).Property(content),3)">$LOCALIZE[31212]</value>
		<value condition="Window.IsVisible(1105)">$LOCALIZE[31213]</value>
		<value>$LOCALIZE[10000]</value>
	</variable>
	<variable name="SubHeaderLabel">
		<value condition="Window.IsVisible(script-ExtendedInfo Script-YoutubeList.xml)">$INFO[Window.Property(Filter_Label),, ]$INFO[Window.Property(TotalItems),, $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)">$LOCALIZE[31242]</value>
		<value condition="Window.IsVisible(DialogAlbumInfo.xml) + Container.Content(albums)">$INFO[ListItem.AlbumArtist]</value>
		<value condition="Window.IsVisible(DialogAlbumInfo.xml) + !Container.Content(albums)">$INFO[ListItem.Property(Artist_Genre)]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(movies)">$INFO[ListItem.TagLine]</value>
		<value condition="Window.IsVisible(DialogVideoInfo.xml) + Container.Content(episodes)">$VAR[ListItemSeasonVar,S]-$VAR[ListItemEpisodeVar,E] • [COLOR Black300]Premiered:[/COLOR] $INFO[ListItem.Premiered]</value>
		<value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[10029]</value>
		<value condition="[Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml)]">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]$INFO[Control.GetLabel(28), • ,]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home) + Skin.HasSetting(furniture.unwatched) + Window.IsVisible(MyVideoNav.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101] • ][COLOR=$VAR[ColourHighlight]]$INFO[Container.TotalUnwatched,,[/COLOR] $LOCALIZE[16101]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home) + !Skin.HasSetting(furniture.unwatched) + Window.IsVisible(MyVideoNav.xml)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101] • ][COLOR=$VAR[ColourHighlight]]$INFO[Container.TotalWatched,,[/COLOR] $LOCALIZE[16102]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container.NumItems) + !Window.IsVisible(home)">[COLOR=$VAR[ColourHighlight]]$INFO[Container.NumItems,,[/COLOR] $LOCALIZE[31101]]$INFO[Control.GetLabel(3), • ,]</value>
		<value condition="!IsEmpty(Container(9500).NumItems) + !Window.IsVisible(home)">[COLOR=$VAR[ColourHighlight]]$INFO[Container(9500).NumItems,,[/COLOR] $LOCALIZE[31101]]</value>
		<value condition="Window.IsVisible(MyWeather.xml) + !IsEmpty(Window(Weather).Property(Location))">[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature,,[/COLOR] ]$INFO[Window(Weather).Property(Location)]</value>
		<value condition="IsEmpty(Pvr.BackendChannels)">[COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(TVShows.Count)][/COLOR] $LOCALIZE[20343] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Music.AlbumsCount)][/COLOR] $LOCALIZE[132]</value>
		<value>[COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(TVShows.Count)][/COLOR] $LOCALIZE[20343] • [COLOR=$VAR[ColourHighlight]]$INFO[Window(home).Property(Music.AlbumsCount)][/COLOR] $LOCALIZE[132] • [COLOR=$VAR[ColourHighlight]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
	</variable>
	<include name="Furniture_Header">
		<control type="grouplist">
			<top>40</top>
			<left>SidePad</left>
			<visible>!Skin.HasSetting(furniture.header)</visible>
			<visible>!ControlGroup(303).HasFocus()</visible>
			<visible>!Control.HasFocus(515)</visible>
			<visible>!Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<include condition="!Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">Animation.FurnitureFadeInOut</include>
			<include condition="Window.IsVisible(script-ExtendedInfo Script-VideoList.xml)">FurnitureFadeInOutExtended</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="8">common/box.png</texture>
				</control>
				<control id="8308" type="image">
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>false</visible>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + [!Substring(Control.GetLabel(8308),empty.png) | Window.IsVisible(DialogAlbumInfo.xml)]</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture border="8">special://skin/extras/icons/emby2.png</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Window.IsVisible(DialogAlbumInfo.xml)</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + Substring(Control.GetLabel(8308),empty.png) + IsEmpty(Window(Home).Property(EmbyUserImage))</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture border="8">$INFO[Window(Home).Property(EmbyUserImage)]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Window.IsVisible(DialogAlbumInfo.xml)</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + Substring(Control.GetLabel(8308),empty.png) + !IsEmpty(Window(Home).Property(EmbyUserImage))</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>!Control.HasFocus(3634)</visible>
				</control>
				<control type="button" id="3634">
					<width>80</width>
					<height>80</height>
					<onleft>301</onleft>
					<onright>301</onright>
					<onup>303</onup>
					<ondown>301</ondown>
					<onclick>RunPlugin("plugin://plugin.video.emby?mode=userprefs")</onclick>
					<font>Button</font>
					<texturefocus>-</texturefocus>
					<texturenofocus>-</texturenofocus>
					<visible>!Container.Scrolling</visible>
					<visible>[!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)] + Substring(Control.GetLabel(8308),empty.png) + !IsEmpty(Window(Home).Property(EmbyUserImage))</visible>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="$VAR[ColourHighlight]" border="8">special://skin/extras/icons/configure.png</texture>
					<visible>Control.HasFocus(3634)</visible>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="multiimage">
					<description>Busy animation</description>
					<centertop>40</centertop>
					<centerleft>40</centerleft>
					<width>48</width>
					<height>48</height>
					<aspectratio>keep</aspectratio>
					<imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
					<timeperimage>100</timeperimage>
					<colordiffuse>$VAR[ColourHighlight]</colordiffuse>
					<fadetime>0</fadetime>
					<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
				</control>
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="ExtendedFurniture_Header">
		<control type="grouplist">
			<top>3</top>
			<left>90</left>
			<visible>Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) | Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml)</visible>
			<include>Animation.FurnitureFadeInOutExtended</include>
			<orientation>horizontal</orientation>
			<itemgap>24</itemgap>
			<control type="group" description="iconbox">
				<width>80</width>
				<height>80</height>
				<control type="image">
					<width>80</width>
					<height>80</height>
					<texture colordiffuse="Panel" border="8">common/box.png</texture>
				</control>
				<control type="image">
					<top>-14</top>
					<left>-14</left>
					<width>108</width>
					<height>108</height>
					<texture colordiffuse="PanelWhite100" border="8">$VAR[HeaderIcon]</texture>
					<visible>!Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="label">
					<centertop>39</centertop>
					<centerleft>40</centerleft>
					<width>80</width>
					<height>80</height>
					<font>LargeBold</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.SortLetter,[UPPERCASE],[/UPPERCASE]]</label>
					<textcolor>PanelWhite100</textcolor>
					<visible>Container.Scrolling</visible>
					<visible>!Skin.HasSetting(hide.busydialog) | !Window.IsVisible(DialogBusy.xml)</visible>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="multiimage">
					<description>Busy animation</description>
					<centertop>40</centertop>
					<centerleft>40</centerleft>
					<width>48</width>
					<height>48</height>
					<aspectratio>keep</aspectratio>
					<imagepath>$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</imagepath>
					<timeperimage>100</timeperimage>
					<colordiffuse>$VAR[ColourHighlight]</colordiffuse>
					<fadetime>0</fadetime>
					<visible>!Skin.String(SkinHelper.SpinnerTexturePath,None)</visible>
					<visible>Skin.HasSetting(hide.busydialog) + Window.IsVisible(DialogBusy.xml)</visible>
				</control>
			</control>
			<control type="group">
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>MediumBold</font>
					<textcolor>Dark1</textcolor>
					<label>$VAR[MainHeaderLabel]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>Dark2</textcolor>
					<label>$VAR[SubHeaderLabel]</label>
				</control>
			</control>
		</control>
	</include>
	<include name="Furniture_Clock">
		<control type="group">
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<top>35</top>
			<visible>!Skin.HasSetting(furniture.clock)</visible>
			<include>Animation.FurnitureFadeInOut</include>
			<height>84</height>
			<control type="label">
				<centertop>24</centertop>
				<right>130</right>
				<align>right</align>
				<font>LargeBold</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[System.Time(hh:mm)]</label>
				<animation effect="slide" start="0" end="50" time="0" condition="IsEmpty(System.Time(xx))">Conditional</animation>
			</control>
			<control type="label">
				<centertop>25</centertop>
				<align>right</align>
				<right>24</right>
				<font>symbolview</font>
				<textcolor>Dark1</textcolor>
				<label></label>
				<fadetime>200</fadetime>
				<visible>[!IsEmpty(ListItem.EndTime) + [Container.Content(movies) | Container.Content(episodes)]] | [!IsEmpty(Container(301).ListItem.EndTime) + Control.HasFocus(301) + Skin.HasSetting(home.vertical)] | [!IsEmpty(Container(301).ListItem.EndTime) + !Skin.HasSetting(home.vertical)]</visible>
			    <visible>[!Window.IsVisible(DialogVideoInfo.xml) + !Skin.HasSetting(furniture.hideendtime)] | Window.IsVisible(DialogVideoInfo.xml)</visible>
			</control>
			<control type="label">
				<centertop>219</centertop>
				<right>-226</right>
				<aligny>top</aligny>
				<width>240</width>
				<height>333</height>
				<font>MediumBoldAngle</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[ListItem.EndTime(hh:mm)]</label>
				<animation condition="true" easing="inout" effect="rotate" end="-90" center="1907,50" time="300">conditional</animation>
				<fadetime>200</fadetime>
				<visible>[!IsEmpty(ListItem.EndTime) + [Container.Content(movies) | Container.Content(episodes)]]</visible>
				<visible>[!Window.IsVisible(DialogVideoInfo.xml) + !Skin.HasSetting(furniture.hideendtime)] | Window.IsVisible(DialogVideoInfo.xml)</visible>
			</control>
			<control type="label">
				<centertop>219</centertop>
				<right>-226</right>
				<aligny>top</aligny>
				<width>240</width>
				<height>333</height>
				<font>MediumBoldAngle</font>
				<textcolor>Dark1</textcolor>
				<label>$INFO[Container(301).ListItem.EndTime(hh:mm)]</label>
				<animation condition="true" easing="inout" effect="rotate" end="-90" center="1907,50" time="300">conditional</animation>
				<fadetime>200</fadetime>
				<visible>!Skin.HasSetting(furniture.hideendtime)</visible>
				<visible>[!IsEmpty(Container(301).ListItem.EndTime) + Control.HasFocus(301) + Skin.HasSetting(home.vertical)] | [!IsEmpty(Container(301).ListItem.EndTime) + !Skin.HasSetting(home.vertical)]</visible>
			</control>
			<control type="label">
				<centertop>30</centertop>
				<right>SidePad</right>
				<font>SmallBold</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>120</width>
				<label>$INFO[System.Time(xx)]</label>
				<visible>!IsEmpty(System.Time(xx))</visible>
			</control>
			<control type="label">
				<centertop>64</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark2</textcolor>
				<align>right</align>
				<width>50%</width>
				<label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(d MMM yyyy)]</label>
			</control>
			<control type="label">
				<centertop>92</centertop>
				<right>SidePad</right>
				<font>Flag</font>
				<textcolor>Dark3</textcolor>
				<align>right</align>
				<width>50%</width>
				<visible>Skin.HasSetting(furniture.weather)</visible>
				<label>[COLOR=$VAR[ColourHighlight]]$INFO[Weather.Temperature][/COLOR] $INFO[Weather.Conditions]</label>
			</control>
		</control>
	</include>

	<include name="Furniture_Home_Flags">
		<control type="group">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Control.HasFocus(301)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>146</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>120</width>
			<height>120</height>
			<control type="label">
				<align>right</align>
				<label>[B]$INFO[Container(301).ListItem.VideoResolution]p[/B]</label>
				<font>MiniSystem</font>
				<textcolor>Dark1</textcolor>
				<visible>!IsEmpty(Container(301).ListItem.VideoResolution)</visible>
			</control>
			<visible>!substring(ListItem.Path,videodb://movies/sets,left)</visible>
			<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !StringCompare(Container(300).ListItem.Property(widget),NextAired) + !StringCompare(Container(300).ListItem.Property(widget),Favourites) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
		</control>
		<control type="grouplist">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Control.HasFocus(301)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>226</left>
			<centerbottom>NavBarPad</centerbottom>
			<width>1400</width>
			<height>120</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="group">
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !StringCompare(Container(300).ListItem.Property(widget),NextAired) + !StringCompare(Container(300).ListItem.Property(widget),Favourites) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
				<centertop>50%</centertop>
				<width>73</width>
				<height>50</height>
				<control type="image" description="button back">
					<width>73</width>
					<height>50</height>
					<texture colordiffuse="Dark1">common/cadre.png</texture>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>[B]$VAR[HDSD][/B]</label>
					<font>FlagHD</font>
					<textcolor>Dark1</textcolor>
					<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				</control>
				<control type="label">
					<width>73</width>
					<height>46</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>[B]$VAR[HDSD][B]</label>
					<font>FlagHD</font>
					<textcolor>$VAR[ColourHighlight2]</textcolor>
					<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				</control>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar1].png</texture>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar1].png</texture>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar2].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar2].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar3].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar3].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar4].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar4].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">flags/$VAR[HomeFlagstar5].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<centertop>50%</centertop>
				<texture colordiffuse="$VAR[ColourHighlight]">flags/$VAR[HomeFlagstar5].png</texture>
				<visible>!Skin.HasSetting(furniture.numericrating)</visible>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<visible>!StringCompare(Container(300).ListItem.Property(widget),LiveTV) + !StringCompare(Container(300).ListItem.Property(widget),Weather) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<control type="label">
				<left>-16</left>
				<width min="48">auto</width>
				<centertop>50%</centertop>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[Container(301).ListItem.Rating]</label>
				<font>DurationFontSmall</font>
				<textcolor>Dark1</textcolor>
				<visible>Skin.HasSetting(furniture.numericrating) + !substring(Container(300).ListItem.Property(widget),Albums)</visible>
			</control>
			<!--<include>lib_Rating_TV</include>-->
			<include>lib_Rating_MPAA_home</include>
			<control type="image">
				<width>108</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.VideoAspect,flags/aspectratio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoAspect) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>60</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.VideoAspect,colored/aspectratio/,.png]</texture>
				<aspectratio align="center">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoAspect) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.VideoCodec,flags/video/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoCodec) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>62</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.VideoCodec,colored/source/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.VideoCodec) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.AudioCodec,flags/audio/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioCodec) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>72</height>
				<centertop>51%</centertop>
				<texture>$INFO[Container(301).ListItem.AudioCodec,colored/audio/,.png]</texture>
				<aspectratio align="left">stretch</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioCodec) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>130</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture colordiffuse="Dark1">$INFO[Container(301).ListItem.AudioChannels,flags/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioChannels) + !Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<width>110</width>
				<height>50</height>
				<centertop>50%</centertop>
				<texture>$INFO[Container(301).ListItem.AudioChannels,colored/channels/,.png]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!IsEmpty(Container(301).ListItem.AudioChannels) + Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<width>220</width>
				<height>64</height>
				<visible>!IsEmpty(Container(301).ListItem.Duration) + !Skin.HasSetting(furniture.flags.colour)</visible>
				<control type="image">
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!IsEmpty(Container(301).ListItem.Duration) + !StringCompare(Container(300).ListItem.Property(widget),LiveTV)</visible>
				</control>
				<control type="image">
					<left>10</left>
					<height>50</height>
					<centertop>50%</centertop>
					<texture colordiffuse="Dark1">flags/time.png</texture>
					<aspectratio align="left">keep</aspectratio>
					<visible>!IsEmpty(Container(301).ListItem.Duration) + StringCompare(Container(300).ListItem.Property(widget),LiveTV)</visible>
				</control>
				<control type="label">
					<left>57</left>
					<width>170</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[DurationHomeLong]</label>
					<font>DurationFontSmall</font>
					<textcolor>Dark1</textcolor>
					<visible>!IsEmpty(Container(301).ListItem.Duration) + !StringCompare(Container(300).ListItem.Property(widget),LiveTV)</visible>
				</control>
				<control type="label">
					<left>57</left>
					<width>155</width>
					<centertop>50%</centertop>
					<height>64</height>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[Container(301).ListItem.Duration]</label>
					<font>DurationFontSmall</font>
					<textcolor>Dark1</textcolor>
					<visible>!IsEmpty(Container(301).ListItem.Duration) + StringCompare(Container(300).ListItem.Property(widget),LiveTV)</visible>
				</control>
			</control>
			<control type="group">
				<centertop>52%</centertop>
				<width>230</width>
				<height>50</height>
				<visible>!IsEmpty(Container(301).ListItem.Duration) + Skin.HasSetting(furniture.flags.colour)</visible>
				<control type="label">
					<left>0</left>
					<width>230</width>
					<centertop>50%</centertop>
					<height>50</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[DurationHomeLong]</label>
					<font>DurationFontSmall</font>
					<textcolor>$VAR[ColourHighlight]</textcolor>
					<visible>!IsEmpty(Container(301).ListItem.Duration) + !StringCompare(Container(300).ListItem.Property(widget),LiveTV)</visible>
				</control>
				<control type="label">
					<left>0</left>
					<width>230</width>
					<centertop>50%</centertop>
					<height>50</height>
					<align>left</align>
					<aligny>center</aligny>
					<label>$INFO[Container(301).ListItem.Duration]</label>
					<font>DurationFontSmall</font>
					<textcolor>$VAR[ColourHighlight]</textcolor>
					<visible>!IsEmpty(Container(301).ListItem.Duration) + StringCompare(Container(300).ListItem.Property(widget),LiveTV)</visible>
				</control>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/3D.png</texture>
				<visible>Container(301).ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/bluray.png</texture>
				<visible>[substring(Container(301).ListItem.FilenameAndPath,bluray) | substring(Container(301).ListItem.FilenameAndPath,bdrip) | substring(Container(301).ListItem.FilenameAndPath,bd25) | substring(Container(301).ListItem.FilenameAndPath,bd50)]</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/hddvd.png</texture>
				<visible>substring(Container(301).ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="image">
				<width>73</width>
				<centertop>50%</centertop>
				<height>50</height>
				<texture colordiffuse="Dark1">flags/dvd.png</texture>
				<visible>substring(Container(301).ListItem.FilenameAndPath,dvd) + !substring(Container(301).ListItem.FilenameAndPath,hddvd)</visible>
			</control>
			<control type="group">
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
				<centertop>50%</centertop>
				<height>64</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<texture colordiffuse="Dark1">flags/imdb.png</texture>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
				</control>
				<control type="label">
					<left>70</left>
					<aligny>top</aligny>
					<top>7</top>
					<width>auto</width>
					<font>Medium</font>
					<align>left</align>
					<textcolor>Black700</textcolor>
					<label>#$INFO[Container(301).ListItem.Top250]</label>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
				<centertop>52%</centertop>
				<height>64</height>
				<width>64</width>
				<control type="image">
					<width>73</width>
					<texture>views/imdbtop250.png</texture>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
					<aspectratio>keep</aspectratio>
				</control>
				<control type="label">
					<left>77</left>
					<aligny>top</aligny>
					<top>7</top>
					<width>auto</width>
					<font>Medium</font>
					<align>left</align>
					<textcolor>fff3ce13</textcolor>
					<label>#$INFO[Container(301).ListItem.Top250]</label>
					<visible>!IsEmpty(Container(301).ListItem.Top250)</visible>
				</control>
			</control>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(furniture.flags)</visible>
			<visible>Control.HasFocus(301)</visible>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<left>226</left>
			<centerbottom>60</centerbottom>
			<width>1400</width>
			<height>120</height>
			<align>left</align>
			<control type="image">
				<left>-15</left>
				<centertop>50%</centertop>
				<width>104</width>
				<height>104</height>
				<texture colordiffuse="Dark1">$VAR[StudioHome]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>!Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
			<control type="image">
				<left>-15</left>
				<centertop>50%</centertop>
				<width>104</width>
				<height>104</height>
				<texture>$VAR[StudioHome]</texture>
				<aspectratio align="left">keep</aspectratio>
				<visible>Skin.HasSetting(furniture.flags.colour)</visible>
			</control>
		</control>
	</include>

	<variable name="HomeFlagstar1">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,1)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,0)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar2">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,3)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,2)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar3">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,5)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,4)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar4">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,7)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,6)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="HomeFlagstar5">
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,9)">star10</value>
		<value condition="IntegerGreaterThan(Container(301).ListItem.Rating,8)">star5</value>
		<value>star0</value>
	</variable>
	<variable name="ClearLogoTopVar">
		<value condition="!IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(Container(9500).ListItem.Art(clearlogo))">$INFO[Container(9500).ListItem.Art(clearlogo)]</value>
		<value condition="!IsEmpty(Container(9500).ListItem.Art(tvshow.clearlogo))">$INFO[Container(9500).ListItem.Art(tvshow.clearlogo)]</value>
	</variable>
	<include name="Furniture_OverlayInfo">
		<control type="group">
			<left>NewSidePad</left>
			<right>NewSidePad</right>
			<top>TopPad</top>
			<visible>![Skin.HasSetting(osd.hidespoilers) + Container.Content(episodes) + [stringcompare(ListItem.Overlay,OverlayUnWatched.png) | ListItem.IsResumable]]</visible>
			<visible>[!Window.IsVisible(DialogVideoInfo.xml) + System.IdleTime(3) + Skin.HasSetting(furniture.overlayinfo)] | Control.HasFocus(9601) | [System.IdleTime(3) + Window.IsVisible(DialogVideoInfo.xml) + Control.HasFocus(132)]</visible>
			<visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogSongInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
			<visible>[!IsEmpty(Window(home).Property(SkinHelper.MovieSet.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot)</visible>
			<visible>!System.IdleTime(20)</visible>
			<include>Animation.FadeIn.Slide</include>
			<control type="group">
				<left>1654</left>
				<top>759</top>
				<control type="image">
					<width>228</width>
					<height>100</height>
					<texture>$VAR[ClearLogo]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<fadetime>50</fadetime>
				</control>
				<visible>Control.IsVisible(500) | Control.IsVisible(54) | Control.IsVisible(52) | Control.IsVisible(50)</visible>
			</control>
						<control type="group">
						<left>10</left>
						<top>-10</top>
							<width>613</width>
							<height>920</height>
						<control type="image">
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture colordiffuse="$INFO[Window(home).Property(VideoInfo.ImageColor)]" background="true">common/white.png</texture>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="zoom" start="100" end="108" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
						</control>
						<control type="image">
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture background="true">$VAR[PosterImage]</texture>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
						</control>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="zoom" start="100" end="94" time="200" center="auto" tween="quadratic" easing="out" />
								<effect type="rotate" end="-1" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
						</control>
			<control type="label">
				<description>header label</description>
				<left>643</left>
				<right>10</right>
				<font>EpisodeNumber</font>
				<textcolor>PanelWhite70</textcolor>
				<height>45</height>
				<label>$VAR[LabelOverlayTitle]</label>
			</control>
			<control type="textbox">
				<description>textarea</description>
				<left>643</left>
				<right>10</right>
				<top>90</top>
				<bottom>650</bottom>
				<align>justify</align>
				<font>Medium</font>
				<textcolor>PanelWhite70</textcolor>
				<label>$VAR[LabelOverlayPlot]</label>
			</control>
			<control type="group">
				<top>340</top>
				<animation effect="slide" start="0,0" end="-0,20" center="auto" time="200" condition="Container(54).OnScrollNext">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,20" center="auto" time="200" condition="Container(54).OnScrollPrevious">Conditional</animation>
				<control type="label">
					<left>643</left>
					<width>246</width>
					<top>-56</top>
					<align>left</align>
					<font>SmallBold</font>
					<textcolor>white</textcolor>
					<label>Director</label>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
				</control>
				<control type="label">
					<left>957</left>
					<width>246</width>
					<top>-56</top>
					<align>left</align>
					<font>SmallBold</font>
					<textcolor>white</textcolor>
					<label>Genre</label>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
				</control>
				<control type="label">
					<left>1271</left>
					<width>246</width>
					<top>-56</top>
					<align>left</align>
					<font>SmallBold</font>
					<textcolor>white</textcolor>
					<label>Cast</label>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
				</control>
				<control type="label">
					<left>1585</left>
					<width>246</width>
					<top>-56</top>
					<align>left</align>
					<font>SmallBold</font>
					<textcolor>white</textcolor>
					<label>Studio</label>
							<fadetime>500</fadetime>
							<animation type="conditional" condition="true" reversible="false">
								<effect type="rotate" end="1" time="200" center="auto" tween="quadratic" easing="out" />
							</animation>
				</control>
				<control type="textbox">
					<left>643</left>
					<width>246</width>
					<height>178</height>
					<align>left</align>
					<font>TinyBold</font>
					<textcolor>white</textcolor>
					<label fallback="19055">$VAR[LabelDirector]</label>
					<autoscroll delay="500" time="1000" repeat="500"/>
							<fadetime>500</fadetime>
				</control>
				<control type="textbox">
					<left>957</left>
					<width>246</width>
					<height>178</height>
					<align>left</align>
					<font>TinyBold</font>
					<textcolor>white</textcolor>
					<label fallback="19055">$VAR[LabelGenreList]</label>
					<autoscroll delay="500" time="1000" repeat="500"/>
							<fadetime>500</fadetime>
				</control>
				<control type="textbox">
					<left>1271</left>
					<width>246</width>
					<height>178</height>
					<align>left</align>
					<font>TinyBold</font>
					<textcolor>white</textcolor>
					<label fallback="19055">$INFO[Window(Home).Property(SkinHelper.ListItemCast)]</label>
					<autoscroll delay="500" time="1000" repeat="500"/>
							<fadetime>500</fadetime>
				</control>
				<control type="textbox">
					<left>1585</left>
					<width>246</width>
					<height>178</height>
					<align>left</align>
					<font>TinyBold</font>
					<textcolor>white</textcolor>
					<label fallback="19055">$INFO[Window(Home).Property(SkinHelper.ListItemStudios)]</label>
							<fadetime>500</fadetime>
				</control>
<!--
				<control type="label">
					<left>337</left>
					<right>10</right>
					<top>303</top>
					<aligny>center</aligny>
					<height>26</height>
					<align>right</align>
					<font>Tiny</font>
					<textcolor>white</textcolor>
					<visible>!Container.Content(seasons)</visible>
					<label fallback="19055">$VAR[LabelYear,, • ]$VAR[LabelDuration,, • ]$INFO[ListItem.Rating]</label>
				</control>
				-->
							<visible>!stringcompare(ListItem.Label,..) + !Container.Content(albums) + !Container.Content(songs)</visible>
			</control>
		</control>
	</include>
	<include name="Furniture_Cast">
		<control type="group">
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Control.IsVisible(500) + !Control.IsVisible(54) + !Control.IsVisible(52)</visible>
			<visible>Container.Content(movies) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)</visible>
			<top>696</top>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<include>Animation.Common.Killer</include>
			<animation type="Conditional" reversible="true" condition="!System.IdleTime(20) + System.IdleTime(3) + Skin.HasSetting(furniture.overlayinfo)">
				<effect type="fade" start="100" end="00" time="200" tween="quadratic" easing="out" />
				<effect type="zoom" end="95" time="200" center="auto" tween="quadratic" easing="out" />
				<effect type="rotate" end="-1" time="200" center="auto" tween="quadratic" easing="out" />
			</animation>
			<control id="508923" type="wraplist">
				<left>-100</left>
				<top>0</top>
				<width>1185</width>
				<height>384</height>
				<onup>50</onup>
				<ondown>RunScript(script.extendedinfo,info=extendedactorinfo,name=$INFO[Container(508923).ListItem.Label])</ondown>
				<onleft>7000</onleft>
				<onright>noop</onright>
				<onright condition="!Window.IsVisible(1103)">SetProperty(BounceRight,1,Home)</onright>
				<onback>9000</onback>
				<preloaditems>8</preloaditems>
				<focusposition>6</focusposition>
				<viewtype label="">list</viewtype>
				<orientation>horizontal</orientation>
				<defaultcontrol always="true">0</defaultcontrol>
				<scrolltime easing="inout" tween="sine">300</scrolltime>
				<animation condition="Window.IsVisible(1103)" reversible="false" type="Conditional">
					<effect easing="out" end="-20,0" start="0,0" time="60" tween="sine" type="slide"/>
					<effect delay="80" easing="out" end="20,0" start="0,0" time="120" tween="sine" type="slide"/>
				</animation>
				<animation effect="fade" end="100" start="0" time="300">Visible</animation>
				<animation effect="fade" end="0" start="100" time="300">Hidden</animation>
				<animation center="480,1022" condition="true" easing="inout" effect="zoom" end="81"  start="100" time="300" tween="sine">Conditional</animation>
				<itemlayout height="234" width="170">
					<control type="group">
						<control type="label">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<height>234</height>
							<aligny>center</aligny>
							<align>center</align>
							<font>symbolbiggest</font>
							<label></label>
							<textcolor>white</textcolor>
							<fadetime>300</fadetime>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio align="center" aligny="top">stretch</aspectratio>
							<texture background="true">$INFO[ListItem.Icon]</texture>
							<fadetime>200</fadetime>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<texture border="15" colordiffuse="99000000">common/white.png</texture>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="234" width="170">
					<control type="group">
						<control type="label">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<height>234</height>
							<aligny>center</aligny>
							<align>center</align>
							<font>symbolbiggest</font>
							<label></label>
							<textcolor>white</textcolor>
							<fadetime>300</fadetime>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<right>0</right>
							<bottom>0</bottom>
							<aspectratio align="center" aligny="top">stretch</aspectratio>
							<texture background="true" fallback="DefaultActor.png">$INFO[ListItem.Icon]</texture>
							<fadetime>00</fadetime>
						</control>
					</control>
				</focusedlayout>
				<content target="video">$VAR[DefWidgetCast]</content>
			</control>
			<control type="image">
				<left>970</left>
				<top>194</top>
				<right>10</right>
				<height>139</height>
				<texture border="15" colordiffuse="$VAR[EmbyLeftColourHighlight]">common/white.png</texture>
				<visible>!Control.IsVisible(50)</visible>
			</control>
			<control type="textbox">
				<description>textarea</description>
				<left>975</left>
				<top>194</top>
				<right>273</right>
				<height>129</height>
				<align>justify</align>
				<font>MediumSmallBold</font>
				<textcolor>white</textcolor>
				<label>$VAR[Plot]</label>
				<visible>!Control.IsVisible(50)</visible>
			</control>
			<control type="image">
				<left>970</left>
				<top>333</top>
				<right>10</right>
				<height>51</height>
				<texture border="15" colordiffuse="$VAR[EmbyRightColourHighlight]">common/white.png</texture>
			</control>
			<control type="label">
				<left>975</left>
				<top>330</top>
				<right>10</right>
				<height>51</height>
				<font>MediumBold</font>
				<textcolor>$VAR[ColourSelected]</textcolor>
				<label>$INFO[Container(508923).ListItem(0).Label]$INFO[Container(508923).ListItem(0).Label2, $LOCALIZE[20347] ]</label>
			</control>
			<control type="image">
				<right>93</right>
				<top>303</top>
				<width>96</width>
				<height>113</height>
				<texture colordiffuse="White">$VAR[ColourStudio]</texture>
				<aspectratio aligny="center" align="right">keep</aspectratio>
			</control>
		</control>
	</include>
	<include name="Furniture_NowPlaying">
		<!-- Next Recording -->
		<control type="group">
			<top>40</top>
			<left>680</left>
			<width>660</width>
			<height>100</height>
			<include>Animation.FadeIn.Slide</include>
			<include>Animation.FadeOut</include>
			<visible>Player.HasMedia</visible>
			<visible>!Skin.HasSetting(furniture.nowplaying)</visible>
			<visible>!SubString(Window(10025).Property(PlayingBackgroundMedia),True)</visible>
			<animation effect="zoom" start="100" end="85" condition="true">Conditional</animation>
			<control type="image">
				<description>background image</description>
				<posx>0</posx>
				<posy>0</posy>
				<width>660</width>
				<height>100</height>
				<texture border="16" colordiffuse="black">common/box.png</texture>
				<animation effect="fade" start="100" end="85" condition="true">Conditional</animation>
			</control>
			<control type="group">
				<centertop>50%</centertop>
				<centerleft>52</centerleft>
				<height>100</height>
				<width>100</width>
				<control type="image" description="Back">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>progress/back.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
				</control>
				<control type="image" description="Play">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/play.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>!Player.Paused</visible>
				</control>
				<control type="image" description="Pause">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="Dark1">progress/pause.png</texture>
					<animation effect="fade" start="0" end="100" time="150">VisibleChange</animation>
					<visible>Player.Paused</visible>
				</control>
				<control type="progress" id="9666">
					<texturebg>-</texturebg>
					<lefttexture>-</lefttexture>
					<midtexture>-</midtexture>
					<righttexture>-</righttexture>
					<info>Player.Progress</info>
					<visible>false</visible>
				</control>
				<control type="image">
					<left>0</left>
					<centertop>50%</centertop>
					<width>100</width>
					<height>100</height>
					<texture colordiffuse="$VAR[EmbyLeftColourHighlight]">$VAR[ProgressPercent]</texture>
					<aspectratio align="center">keep</aspectratio>
					<visible>!IsEmpty(Player.Duration)</visible>
				</control>
			</control>
			<control type="group">
				<left>104</left>
				<width>550</width>
				<posy>10</posy>
				<control type="label">
					<centertop>24</centertop>
					<width>auto</width>
					<font>SmallBold</font>
					<align>left</align>
					<textcolor>white</textcolor>
					<label>$INFO[Player.Title]</label>
				</control>
				<control type="label">
					<centertop>58</centertop>
					<align>left</align>
					<font>Flag</font>
					<width>auto</width>
					<textcolor>white2</textcolor>
					<label>$INFO[VideoPlayer.TvShowTitle,, ]$INFO[MusicPlayer.Artist,, ]$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
				</control>
				<control type="image">
					<centertop>20</centertop>
					<width>auto</width>
					<height>auto</height>
					<texture colordiffuse="$VAR[EmbyRightColourHighlight]">equaliser.gif</texture>
					<visible>!Player.Paused</visible>
				</control>
				<control type="image">
					<centertop>20</centertop>
					<width>auto</width>
					<height>auto</height>
					<texture colordiffuse="$VAR[EmbyRightColourHighlight]">equaliser_stop.gif</texture>
					<visible>Player.Paused</visible>
				</control>
			</control>
		</control>
	</include>
</includes>
